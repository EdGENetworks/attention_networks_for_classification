[Data]
train_path = temp_train.pkl
dev_path = temp_dev.pkl
test_path = dataset\reuters\dev.pkl
preload_word_to_idx = true
word_to_idx_path = ulmfit/reuters_stoi1.json
label_to_idx_path = dataset/reuters/label_to_idx.json

[Preprocessing]
preprocess_all = false
dataset_name = trec
write_data_dir = dataset/reuters
restructure_docs = true
balance_dataset = true # only for parsing from sheet (csv/xlsx)
max_seq_len = 100
min_freq_word = 13
percentage_train = 0.8
percentage_dev = 0.0

[Logging]
log_path = log.txt
tensorboard_dir = runs

[Training]
do_train = true
do_eval = true
save_dir = models
binary_class = true
train_batch_size = 16
eval_batch_size = 32
learning_rate = 0.005
num_cycles_lr = 10
dropout = 0.3063618851034703
num_train_epochs = 30
eval_every = 194
K = 1 #TODO: propagation
weight_decay = 0 #1.0138176410929274e-05
label_value = 0.9475443434664698

[Model]
model_name = Hcapsnet
word_encoder = ulmfit
sent_encoder = gru
use_glove = false
embed_dim = 300
word_hidden = 100
sent_hidden = 310

[CapsNet]
dim_caps = 16
num_caps = 512
num_compressed_caps = 85
num_head_doc = 2
dropout_caps = 0.25289388620997433
lambda_reg_caps = 1.2951161858325882e-05
KDE_epsilon = 0.05

[FastText]
word_vec_path = word vectors/custom_imdb.bin
create_wordvecs = false
use_ft_baseline = false
ft_save_path = fasttext.model
ft_n_epoch = 50
ft_minn = 3 # char ngrams
ft_maxn = 6 # char ngrams
ft_lr = 0.05 # learning rate

[ULMFiT]
create_doc_encodings = false
ulmfit_pretrained_path = ulmfit/reuters_lm15.1.pth #ulmfit/lm_torch3.pt #
dropout_factor = 2.1031791508641557
lr_div_factor = 5.7783702814600115
gradual_unfreeze = true
keep_frozen = false

